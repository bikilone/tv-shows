{"version":3,"sources":["services/dataService.js","redux/actions.js","redux/constants.js","components/Header/Header.js","components/SingleCard/SingleCard.js","containers/CardList/CardList.js","containers/Library/Library.js","containers/DetailsPage/DetailsPage.js","containers/ErrorBoundary/ErrorBoundary.js","containers/App/App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["dataService","data","Object","classCallCheck","this","genres","id","name","officialSite","premiered","rating","summary","_data$_embedded","_embedded","cast","seasons","splitted","image","medium","split","finalSrc","getLibrary","localStorage","getItem","type","payload","JSON","parse","saveToLibrary","libraryStorage","info","title","text","library","index","findIndex","tvShow","stringify","push","libraryJSON","setItem","filteredLibrary","filter","connect","state","search","searchTvShows","dispatch","event","target","value","props","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","style","marginBottom","Brand","react_router_dom","to","color","textDecoration","Toggle","aria-controls","Collapse","Nav","className","Form","inline","Row","Col","FormControl","placeholder","display","onChange","SingleCard","src","fill","xs","span","offset","sm","md","lg","xl","Card","Img","Body","Title","Text","dangerouslySetInnerHTML","__html","height","overflow","Button","concat","index_esm","float","stroke","strokeWidth","cursor","size","onClick","CardList","fetchTvShows","_this$props","tvShows","isPending","filteredTvShows","toLowerCase","includes","marginTop","Spinner","animation","Container","fluid","map","libraryShow","key","Component","fetch","then","json","catch","error","Library","length","DetailsPage","fetchSingleShow","match","params","singleShow","Tabs","defaultActiveKey","Tab","eventKey","listStyle","season","fontWeight","premiereDate","endDate","padding","actor","alignItems","Image","person","width","minWidth","character","ErrorBoundary","_this","possibleConstructorReturn","getPrototypeOf","call","hasError","setState","children","App","components_Header_Header","ErrorBoundary_ErrorBoundary","react_router","exact","path","component","Boolean","window","location","hostname","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24c3711a.chunk.js","sourcesContent":["class dataService {\r\n  constructor(data) {\r\n    const { genres, id, name, officialSite, premiered, rating, summary } = data;\r\n    const { cast, seasons } = data._embedded;\r\n    // converting http => https\r\n    const splitted = data.image.medium.split(\"://\");\r\n    const finalSrc = splitted[0] + \"s://\" + splitted[1];\r\n    //\r\n    this.genres = genres;\r\n    this.id = id;\r\n    this.name = name;\r\n    this.officialSite = officialSite;\r\n    this.premiered = premiered;\r\n    this.rating = rating;\r\n    this.summary = summary;\r\n    this.cast = cast;\r\n    this.seasons = seasons;\r\n    this.image = finalSrc;\r\n  }\r\n}\r\n\r\nexport default dataService;\r\n","import {\r\n  FETCH_TV_SHOWS_SUCCESS,\r\n  FETCH_TV_SHOWS_FAILED,\r\n  GET_LIBRARY,\r\n  SAVE_TV_SHOW,\r\n  SEARCH_TV_SHOWS,\r\n  FETCH_SINGLE_SHOW,\r\n  FETCH_SINGLE_SHOW_FAILED,\r\n  GET_LIBRARY_FAILED\r\n} from \"./constants\";\r\nimport dataService from \"../services/dataService\";\r\n\r\nexport const fetchTvShows = () => dispatch => {\r\n  fetch(\"https://api.tvmaze.com/shows\")\r\n    .then(data => data.json())\r\n    .then(data => dispatch({ type: FETCH_TV_SHOWS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: FETCH_TV_SHOWS_FAILED, payload: error }));\r\n};\r\n\r\nexport const getLibrary = () => {\r\n  if (localStorage.getItem(\"library\") !== null) {\r\n    return {\r\n      type: GET_LIBRARY,\r\n      payload: JSON.parse(localStorage.getItem(\"library\"))\r\n    };\r\n  } else {\r\n    return { type: GET_LIBRARY_FAILED, payload: \"Library is empty\" };\r\n  }\r\n};\r\n\r\nexport const saveToLibrary = data => {\r\n  const libraryStorage = localStorage.getItem(\"library\");\r\n  const info = {\r\n    id: data.id,\r\n    image: data.image,\r\n    title: data.title,\r\n    text: data.text\r\n  };\r\n  if (libraryStorage !== null) {\r\n    const library = JSON.parse(libraryStorage);\r\n    const index = library.findIndex(tvShow => {\r\n      return JSON.stringify(tvShow) === JSON.stringify(info);\r\n    });\r\n    if (index === -1) {\r\n      library.push(info);\r\n      const libraryJSON = JSON.stringify(library);\r\n      localStorage.setItem(\"library\", libraryJSON);\r\n    } else {\r\n      const filteredLibrary = library.filter(\r\n        tvShow => tvShow !== library[index]\r\n      );\r\n      const libraryJSON = JSON.stringify(filteredLibrary);\r\n      localStorage.setItem(\"library\", libraryJSON);\r\n    }\r\n  } else {\r\n    const library = [info];\r\n    const libraryJSON = JSON.stringify(library);\r\n    localStorage.setItem(\"library\", libraryJSON);\r\n  }\r\n  return {\r\n    type: SAVE_TV_SHOW\r\n  };\r\n};\r\n\r\nexport const searchTvShows = text => ({\r\n  type: SEARCH_TV_SHOWS,\r\n  payload: text\r\n});\r\n\r\nexport const fetchSingleShow = id => dispatch => {\r\n  fetch(`https://api.tvmaze.com/shows/${id}?embed[]=cast&embed[]=seasons`)\r\n    .then(data => data.json())\r\n    .then(data => {\r\n      return data;\r\n    })\r\n    .then(data => new dataService(data))\r\n    .then(data =>\r\n      dispatch({\r\n        type: FETCH_SINGLE_SHOW,\r\n        payload: data\r\n      })\r\n    )\r\n    .catch(error =>\r\n      dispatch({\r\n        type: FETCH_SINGLE_SHOW_FAILED,\r\n        payload: error\r\n      })\r\n    );\r\n};\r\n","export const FETCH_TV_SHOWS_SUCCESS = \"FETCH_TV_SHOWS_SUCCESS\";\r\nexport const FETCH_TV_SHOWS_FAILED = \"FETCH_TV_SHOWS_FAILED\";\r\nexport const SAVE_TV_SHOW = \"SAVE_TV_SHOW\";\r\nexport const GET_LIBRARY = \"GET_LIBRARY\";\r\nexport const GET_LIBRARY_FAILED = \"GET_LIBRARY_FAILED\";\r\nexport const SEARCH_TV_SHOWS = \"SEARCH_TV_SHOWS\";\r\nexport const FETCH_SINGLE_SHOW = \"FETCH_SINGLE_SHOW\";\r\nexport const FETCH_SINGLE_SHOW_FAILED = \"FETCH_SINGLE_SHOW_FAILED\";\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Form, FormControl, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchTvShows } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  search: state.searchTvShows.search\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchTvShows: event => dispatch(searchTvShows(event.target.value))\r\n});\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"sm\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      style={{ marginBottom: \"10px\" }}\r\n      // fixed=\"top\"\r\n    >\r\n      <Navbar.Brand>\r\n        <Link to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n          TV SHOWS\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          {/* <Nav.Link> */}\r\n          <Link\r\n            to=\"/library\"\r\n            style={{ color: \"#C4C6C8\", textDecoration: \"none\" }}\r\n          >\r\n            LIBRARY\r\n          </Link>\r\n          {/* </Nav.Link> */}\r\n        </Nav>\r\n        <Nav>\r\n          <Form inline>\r\n            <Form.Row>\r\n              <Col>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  style={{ display: \"inline-block\" }}\r\n                  onChange={props.searchTvShows}\r\n                />\r\n              </Col>\r\n              {/* <Col>\r\n                <Button variant=\"outline-info\">Search</Button>\r\n              </Col> */}\r\n            </Form.Row>\r\n          </Form>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React from \"react\";\r\nimport { Card, Button, Col } from \"react-bootstrap\";\r\nimport { IoIosStar } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SingleCard(props) {\r\n  const { src, title, text, saveToLibrary, id, fill } = props;\r\n\r\n  const createMarkup = () => ({\r\n    __html: text\r\n  });\r\n  return (\r\n    <Col\r\n      xs={{ span: 8, offset: 2 }}\r\n      sm={{ span: 6, offset: 0 }}\r\n      md={4}\r\n      lg={4}\r\n      xl={3}\r\n    >\r\n      <Card style={{ marginBottom: \"5px\" }}>\r\n        <Card.Img variant=\"top\" src={src} />\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Text\r\n            dangerouslySetInnerHTML={createMarkup()}\r\n            style={{\r\n              height: \"100px\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          />\r\n          <Button variant=\"secondary\">\r\n            <Link to={`/${id}`} style={{ color: \"white\" }}>\r\n              Details\r\n            </Link>\r\n          </Button>\r\n          <IoIosStar\r\n            style={{\r\n              float: \"right\",\r\n              color: \"white\",\r\n              stroke: \"blue\",\r\n              strokeWidth: \"3px\",\r\n              cursor: \"pointer\"\r\n            }}\r\n            size=\"2em\"\r\n            fill={fill}\r\n            onClick={() => saveToLibrary({ id, image: src, title, text })}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTvShows, saveToLibrary, getLibrary } from \"../../redux/actions\";\r\nimport SingleCard from \"../../components/SingleCard/SingleCard\";\r\nimport { Container, Row, Spinner } from \"react-bootstrap\";\r\n\r\nconst mapStateToProps = state => ({\r\n  tvShows: state.fetchTvShows.tvShows,\r\n  isPending: state.fetchTvShows.isPending,\r\n  library: state.getLibrary.library,\r\n  search: state.searchTvShows.search\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchTvShows: () => dispatch(fetchTvShows()),\r\n  saveToLibrary: data => {\r\n    dispatch(saveToLibrary(data));\r\n    dispatch(getLibrary());\r\n  },\r\n  getLibrary: () => dispatch(getLibrary())\r\n});\r\n\r\nclass CardList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchTvShows();\r\n    this.props.getLibrary();\r\n  }\r\n  render() {\r\n    const { tvShows, isPending, saveToLibrary, library, search } = this.props;\r\n    const filteredTvShows = tvShows.filter(tvShow =>\r\n      tvShow.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    return isPending ? (\r\n      <div\r\n        className=\"d-flex justify-content-center\"\r\n        style={{ marginTop: \"40vh\" }}\r\n      >\r\n        <Spinner animation=\"border\" />\r\n      </div>\r\n    ) : (\r\n      <Container fluid={true}>\r\n        <Row>\r\n          {filteredTvShows.map(tvShow => {\r\n            const index = library.findIndex(\r\n              libraryShow =>\r\n                JSON.stringify(libraryShow.id) === JSON.stringify(tvShow.id)\r\n            );\r\n            let fill = \"\";\r\n            if (index === -1) {\r\n              fill = \"white\";\r\n            } else {\r\n              fill = \"#000000\";\r\n            }\r\n            return (\r\n              <SingleCard\r\n                fill={fill}\r\n                id={tvShow.id}\r\n                saveToLibrary={saveToLibrary}\r\n                key={tvShow.id}\r\n                src={tvShow.image.medium}\r\n                title={tvShow.name}\r\n                text={tvShow.summary}\r\n              />\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CardList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLibrary, saveToLibrary } from \"../../redux/actions\";\r\nimport SingleCard from \"../../components/SingleCard/SingleCard\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nconst mapStateToProps = state => ({\r\n  library: state.getLibrary.library,\r\n  error: state.getLibrary.error,\r\n  search: state.searchTvShows.search\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLibrary: () => dispatch(getLibrary()),\r\n  saveToLibrary: data => {\r\n    dispatch(saveToLibrary(data));\r\n    dispatch(getLibrary());\r\n  }\r\n});\r\n\r\nclass Library extends Component {\r\n  componentDidMount() {\r\n    this.props.getLibrary();\r\n  }\r\n  render() {\r\n    const { library, saveToLibrary, search } = this.props;\r\n    const filteredLibrary = library.filter(tvShow =>\r\n      tvShow.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    return library.length < 1 ? (\r\n      <div\r\n        className=\"d-flex justify-content-center\"\r\n        style={{ marginTop: \"40vh\" }}\r\n      >\r\n        Library is empty\r\n      </div>\r\n    ) : (\r\n      <Container fluid={true} style={{ marginTop: \"20px\" }}>\r\n        <Row>\r\n          {filteredLibrary.map(tvShow => {\r\n            return (\r\n              <SingleCard\r\n                fill=\"#000000\"\r\n                id={tvShow.id}\r\n                key={tvShow.id}\r\n                src={tvShow.image}\r\n                title={tvShow.title}\r\n                text={tvShow.text}\r\n                saveToLibrary={saveToLibrary}\r\n              />\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Library);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchSingleShow } from \"../../redux/actions\";\r\nimport {\r\n  Spinner,\r\n  Tabs,\r\n  Tab,\r\n  Col,\r\n  Card,\r\n  Row,\r\n  Image,\r\n  Container\r\n} from \"react-bootstrap\";\r\n\r\nconst mapStateToProps = state => ({\r\n  singleShow: state.fetchSingleShow.singleShow,\r\n  error: state.fetchSingleShow.error,\r\n  isPending: state.fetchSingleShow.isPending\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchSingleShow: id => dispatch(fetchSingleShow(id))\r\n});\r\n\r\nclass DetailsPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSingleShow(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    const { singleShow, isPending } = this.props;\r\n    const { image, name, summary, seasons, cast } = singleShow;\r\n    const createMarkup = () => ({\r\n      __html: summary\r\n    });\r\n    return isPending ? (\r\n      <div\r\n        className=\"d-flex justify-content-center\"\r\n        style={{ marginTop: \"40vh\" }}\r\n      >\r\n        <Spinner animation=\"border\" />\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <Row>\r\n          <Col xs={6}>\r\n            <Card style={{ marginBottom: \"5px\" }}>\r\n              <Card.Img variant=\"top\" src={image} />\r\n              <Card.Body>\r\n                <Card.Title>{name}</Card.Title>\r\n                <Card.Text dangerouslySetInnerHTML={createMarkup()} />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <Tabs defaultActiveKey=\"Cast\" id=\"uncontrolled-tab-example\">\r\n              <Tab eventKey=\"Seasons\" title=\"Seasons\">\r\n                <ul style={{ marginTop: \"10px\", listStyle: \"none\" }}>\r\n                  {seasons.map((season, index) => (\r\n                    <li key={index}>\r\n                      <span style={{ fontWeight: \"bold\" }}>\r\n                        Season {index + 1}\r\n                      </span>{\" \"}\r\n                      {season.premiereDate} {\" - \"} {season.endDate}\r\n                      <hr />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Tab>\r\n              <Tab eventKey=\"Cast\" title=\"Cast\">\r\n                <Container>\r\n                  <ul\r\n                    style={{\r\n                      listStyle: \"none\",\r\n                      padding: \"0\",\r\n                      marginTop: \"10px\"\r\n                    }}\r\n                  >\r\n                    {cast.map((actor, index) => (\r\n                      <li key={index} style={{ marginBottom: \"5px\" }}>\r\n                        <Row style={{ alignItems: \"center\" }}>\r\n                          <Col xs={3}>\r\n                            <Image\r\n                              src={actor.person.image.medium}\r\n                              style={{ width: \"100%\", minWidth: \"40px\" }}\r\n                            />\r\n                          </Col>\r\n                          <Col xs={{ span: 6, offset: 1 }}>\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                height: \"100%\"\r\n                              }}\r\n                            >\r\n                              <p>\r\n                                {actor.person.name} as {actor.character.name}\r\n                              </p>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                        <hr />\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </Container>\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DetailsPage);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n  render() {\r\n    return this.state.hasError ? \"Something went wrong\" : this.props.children;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport CardList from \"../CardList/CardList\";\nimport Library from \"../Library/Library\";\nimport { Route, Switch } from \"react-router\";\nimport DetailsPage from \"../DetailsPage/DetailsPage\";\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <ErrorBoundary>\n          <Switch>\n            <Route exact path=\"/\" component={CardList} />\n            <Route exact path=\"/library\" component={Library} />\n            <Route exact path=\"/:id\" component={DetailsPage} />\n          </Switch>\n        </ErrorBoundary>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_TV_SHOWS_SUCCESS,\r\n  FETCH_TV_SHOWS_FAILED,\r\n  GET_LIBRARY,\r\n  SAVE_TV_SHOW,\r\n  SEARCH_TV_SHOWS,\r\n  FETCH_SINGLE_SHOW,\r\n  FETCH_SINGLE_SHOW_FAILED\r\n} from \"./constants\";\r\n\r\nconst initialState = {\r\n  isPending: true,\r\n  tvShows: [],\r\n  error: \"\",\r\n  library: [],\r\n  search: \"\",\r\n  singleShow: \"\"\r\n};\r\n\r\nexport const fetchTvShows = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_TV_SHOWS_SUCCESS:\r\n      return { ...state, isPending: false, tvShows: action.payload };\r\n    case FETCH_TV_SHOWS_FAILED:\r\n      return { ...state, isPending: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getLibrary = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case GET_LIBRARY:\r\n      return { ...state, library: action.payload, error: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const saveToLibrary = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case SAVE_TV_SHOW:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const searchTvShows = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case SEARCH_TV_SHOWS:\r\n      return { ...state, search: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchSingleShow = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_SINGLE_SHOW:\r\n      return { ...state, singleShow: action.payload, isPending: false };\r\n    case FETCH_SINGLE_SHOW_FAILED:\r\n      return { ...state, error: action.payload, isPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {\n  fetchTvShows,\n  getLibrary,\n  saveToLibrary,\n  searchTvShows,\n  fetchSingleShow\n} from \"./redux/reducers\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst rootReducer = combineReducers({\n  fetchTvShows,\n  getLibrary,\n  saveToLibrary,\n  searchTvShows,\n  fetchSingleShow\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}